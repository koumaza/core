@use "smui-theme";
@use "@material/theme/custom-properties";
@use '@material/theme';
@use "@material/button";
@use "@material/feature-targeting";
@use "@material/ripple";

@mixin core-styles($query: feature-targeting.all()) {
	.mdc-button,
	.mdc-button--outlined {
		&.smui-button--color-secondary {
			@include ink-color(var(--mdc-theme-secondary, theme.$secondary));
		}
		&:not(.smui-button--color-secondary) {
			@include ink-color(var(--mdc-theme-primary, theme.$primary));
		}
	}

	.mdc-button--raised,
	.mdc-button--unelevated {
		&.smui-button--color-secondary {
			@include container-fill-color(
				var(--mdc-theme-secondary, theme.$secondary)
			);
			@include ink-color(var(--mdc-theme-on-secondary, theme.$on-secondary));
		}
		&:not(.smui-button--color-secondary) {
			@include container-fill-color(var(--mdc-theme-primary, theme.$primary));
			@include ink-color(var(--mdc-theme-on-primary, theme.$on-primary));
		}
		@include disabled-container-fill-color;
	}

	.mdc-button {
		@include disabled-ink-color;
		@include icon-color;
		@include disabled-icon-color;
		@include height;
		@include shape-radius;
		@include horizontal-padding;
		@include outline-color;
		@include disabled-outline-color;
	}

	@include density;
	@include shape-rounded;
	// @include without-ripple;
	// @include ripple;
}

@mixin container-fill-color($fallback) {
	$container-fill-color: var(--smui-button--container-fill-color, $fallback);
	@include button.container-fill-color($container-fill-color);
}

@mixin disabled-container-fill-color {
	$disabled-container-fill-color: var(
		--smui-button--disabled-container-fill-color,
		button.$disabled-container-color
	);
	@include button.disabled-container-fill-color($disabled-container-fill-color);
}

@mixin icon-color {
	$icon-color: var(--smui-button--icon-color, inherit);
	@include button.icon-color($icon-color);
}

@mixin disabled-icon-color {
	$disabled-icon-color: var(--smui-button--disabled-icon-color, inherit);
	@include button.disabled-icon-color($disabled-icon-color);
}

@mixin ink-color($fallback) {
	$ink-color: var(--smui-button--ink-color, $fallback);
	@include button.ink-color($ink-color);
}

@mixin disabled-ink-color {
	$disabled-ink-color: var(
		--smui-button--disabled-ink-color,
		button.$disabled-ink-color
	);
	@include button.disabled-ink-color($disabled-ink-color);
}

@mixin density {
	@each $density in 0, 1, 2, 3 {
		.smui-button--dense--#{$density} {
			@include button.density($density * -1);
		}

		//@include shape-rounded($density); density doesn't seems to have any effect
	}
}

@mixin height {
	$height: var(--smui-button--height, button.$height);
	@include button.height($height);
}

@mixin shape-radius {
	$shape-radius: custom-properties.create(
		--smui-button--shape-radius,
		button.$shape-radius
	);
	@include button.shape-radius($shape-radius);
}

@mixin shape-rounded($density: null) {
	@if $density {
		.smui-button--dense-#{$density}--shape-rounded {
			@include button.shape-radius(50%, $density * -1);
		}
	} @else {
		.smui-button--shape-rounded {
			@include button.shape-radius(50%);
		}
	}
}

@mixin horizontal-padding() {
	$horizontal-padding: var(
		--smui-button--horizontal-padding,
		button.$horizontal-padding
	);
	@include button.horizontal-padding($horizontal-padding);
}

@mixin outline-color() {
	$outline-color: var(--smui-button--outline-color, button.$outline-color);
	@include button.outline-color($outline-color);
}

@mixin disabled-outline-color() {
	$disabled-outline-color: var(
		--smui-button--disabled-outline-color,
		button.$disabled-container-color
	);
	@include button.disabled-outline-color($disabled-outline-color);
}

// Doesn't support CSS custom properties, cannot theme
// @mixin outline-width() {
// 	$outline-width: custom-properties.create(
// 		--smui-button--outline-width,
// 		button.$outlined-border-width
// 	);
// 	@include button.outline-width($outline-width);
// }
